# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# Activate local python virtual environment if present in the root directory.
# You can create a virtual environment with 'python3 -m venv .venv'
# and then install all required packages with 'python3 -m pip install -r python/requirements.txt'
#
# NOTE: the bin/activate script directly sets the PATH variable to a value saved during
# an earlier run of the script to restore the PATH to that state. This may overwrite any
# changes made to the PATH since the last run. Because of this it is EXTREMELY important
# NOT to modify the PATH in the 'setenv' script before activating the virtual env.
# In short, this activation MUST BE at the very beginning of the 'setenv' script.
#
if [ -f "$HOME/.venv/bin/activate" ] ; then
  source $HOME/.venv/bin/activate
fi

# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
        . "$HOME/.bashrc"
    fi
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

if [ -e ~/.nix-profile/etc/profile.d/nix.sh ]; then . ~/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

echo "Welcome to the 'opp_env' WSL distro! (v$(opp_env --version))"

notice_file=~/.opp_env_upgrade_notice
if [ -f $notice_file ]; then
  echo
  cat $notice_file
  echo
  echo "Run 'touch ~/.opp_env_upgrade_check_disable' to disable this automatic upgrade check."
fi

if [ ! -f ~/.opp_env_intro_disable -a "$(command -v opp_env)" ]; then
  echo
  opp_env --help-intro
  echo
  echo "Run 'touch ~/.opp_env_intro_disable' to remove this intro."
fi

# daily opp_env version check - execute 'touch ~/.disable_opp_env_upgrade_check' to disable
timestamp=~/.opp_env_upgrade_check_timestamp
if [ ! -f ~/.opp_env_upgrade_check_disable ]; then
  # See if it's expired, and background update
  lastrun=$(stat -c %Y "$timestamp" 2>/dev/null) || lastrun=0
  expiration=$(expr $lastrun + 86400)
  if [ $(date +%s) -ge $expiration ]; then
    ( 
      if [ "$(pip install --upgrade --dry-run --disable-pip-version-check opp-env | grep 'Would install')" ]; then
        echo -e "\033[0;32mA new version of 'opp_env' is available.\nRun 'pip install --upgrade opp_env' to upgrade. \033[0;0m" > $notice_file
      else 
        rm -f $notice_file
      fi 
    ) &
    disown
    touch $timestamp
  fi
else
  rm -f $notice_file
fi

echo
